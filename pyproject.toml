[project]
name = "video-uploader"
version = "1.0.0"
description = "多平台视频自动上传服务 - 支持抖音、微信视频号、小红书、B站、快手等"
authors = [
    { name = "Video Uploader Team", email = "support@video-uploader.com" }
]
dependencies = [
    "mcp>=0.1.0",
    "playwright>=1.40.0",
    "pydantic>=2.5.0",
    "loguru>=0.7.2",
    "python-dotenv>=1.0.0",
    "aiofiles>=23.2.1",
    "biliup>=0.4.0",  # Bilibili上传依赖
]
requires-python = ">=3.10"
readme = "README.md"
license = { text = "MIT" }

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "httpx>=0.25.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.black]
line-length = 88
target-version = ["py310"]

[tool.ruff]
target-version = "py310"
line-length = 88
select = ["E", "F", "I", "N", "W", "UP"]
ignore = ["E501"]

[tool.mypy]
python_version = "3.10"
strict = true
warn_return_any = true
warn_unused_configs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.mcp]
name = "video-uploader"
description = "多平台视频自动上传服务"
command = "python"
args = ["-m", "video_uploader.server"]

[dependency-groups]
dev = [
    "black>=25.1.0",
    "httpx>=0.28.1",
    "mypy>=1.17.1",
    "pre-commit>=4.3.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "ruff>=0.12.10",
]

[project.scripts]
video-uploader = "video_uploader.server:main"

